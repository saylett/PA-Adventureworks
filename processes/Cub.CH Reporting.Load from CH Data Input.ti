#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

cCubS = 'CH Data Input';
cCubT = 'CH Reporting';

cView = GetProcessName();

cFilter = 'CH Version: FQ1+FQ3+Budget & CH Company:' | pEntity | '& CH Cost Centre:' | pCostCentre | '& CH Measure:Value';

ExecuteProcess('Bedrock.Cube.View.Create',
  'pCube',cCubT,
  'pView', cView,
  'pFilter',cFilter,
  'pSuppressZero',1,
  'pSuppressConsol',1,
  'pSuppressRules',1,
  'pDimensionDelim','&',
  'pElementStartDelim',':',
  'pElementDelim','+',
  'pDebug',1);
  
ViewZeroOut(cCubT, cView);


cFilter = 'CH Company:' | pEntity | '& CH Cost Centre:' | pCostCentre | '& CH Input Measure:Value 1+Value 2+Value 3';

ExecuteProcess('Bedrock.Cube.View.Create',
  'pCube',cCubS,
  'pView',cView,
  'pFilter',cFilter,
  'pSuppressZero',1,
  'pSuppressConsol',1,
  'pSuppressRules',1,
  'pDimensionDelim','&',
  'pElementStartDelim',':',
  'pElementDelim','+',
  'pDebug',1);
  
DataSourceType = 'VIEW';
DataSourceNameForServer = cCubS;
DatasourceCubeView = cView;
ViewExtractSkipCalcsSet(cCubS, cView, 1);
ViewExtractSkipRuleValuesSet(cCubS, cView, 1);
ViewExtractSkipZeroesSet(cCubS, cView, 1);
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

sVersion = AttrS('CH Input Measure', vCHInputMeasure, 'Version');

If( sVersion @= 'Actual' );
  ItemSkip;
EndIf;

sYear = AttrS('CH Input Measure', vCHInputMeasure, 'Year');

LogOutput( 'Info', sYear );

sMonth = AttrS('CH Input Measure', vCHInputMeasure, 'Month');

LogOutput( 'Info', sMonth );

sSCOA = CellGetS(cCubS, vCHCompany, vCHCostCentre, vCHItem, 'SCOA');

LogOutput( 'Info', sSCOA );

sPC = CellGetS(cCubS, vCHCompany, vCHCostCentre, vCHItem, 'Purpose Code');

LogOutput( 'Info', sPC );


CellIncrementN(vValue, cCubT, sVersion, sYear, sMonth, 'Local', vCHCompany, vCHCostCentre, sSCOA, sPC, 'Value');
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion