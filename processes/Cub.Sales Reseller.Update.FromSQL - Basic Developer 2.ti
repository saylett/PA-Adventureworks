#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****


## This Process Uploads a Specific Period of Sales Data into the 'Sales Reseller' cube##
cCubeName = 'Sales Reseller';
cVersion = 'Actual';
cCurrency = 'Local';
cViewName = 'TI_' | NumbertoString ( RAND() * 100000  );
cSubName = cViewName;



## Clear Data specific to the period that requires uploading ##

## Step 1. Create Cube View ##
IF ( ViewExists(cCubeName,cViewName) = 1  );
  ViewDestroy(cCubeName,cViewName);
  ViewCreate(cCubeName,cViewName);
ELSE;
  ViewCreate(cCubeName,cViewName);
ENDIF;

## Step 2. Create Subset of the month and year to clear out and assign to Cube View ##

# Month #
cDimName = 'Period';
# Convert Period into Number for SQL #
pMonth = ATTRS(cDimName,pMonth,'monthN');

IF ( SubsetExists(cDimName,cSubName)=1);
  SubsetDestroy(cDimName,cSubName);
  SubsetCreate(cDimName,cSubName);
ELSE;
  SubsetCreate(cDimName,cSubName);
ENDIF;

SubsetElementInsert(cDimName,cSubName,pMonth,1);
Viewsubsetassign(cCubeName,cViewName,cDimName,cSubName);

# Year #
cDimName = 'Year';
IF ( SubsetExists(cDimName,cSubName)=1);
  SubsetDestroy(cDimName,cSubName);
  SubsetCreate(cDimName,cSubName);
ELSE;
  SubsetCreate(cDimName,cSubName);
ENDIF;

SubsetElementInsert(cDimName,cSubName,pYear,1);
Viewsubsetassign(cCubeName,cViewName,cDimName,cSubName);

# Step 3.  Clear data from the view created ##
ViewZeroOut(cCubeName,cViewName);


## Destroy View and Subsets. #
## Tip - Below can also be done by Looping through all dimensions and
## Deleting the subset ##
ViewDestroy(cCubeName,cViewName);

cDimName = 'Period';
SubsetDestroy(cDimName,cSubName);

cDimName = 'Year';
SubsetDestroy(cDimName,cSubName);

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


## CLEAN SOURCE VARIABLES ###

sYear = NumberToString(vFiscalYear);
nCost = NUMBR(vTotalproductcost);
nSalesAmt = NUMBR(vSalesamount);
nTax = NUMBR(vTaxamt);
nFreight = NUMBR(vFreight);
sMonth = vEnglishmonthname;
sProduct = NumberToString(vProductKey);
sEmployeeID = Trim(vEmployeenationalidalternatekey);


## Upload Data into Sales Cube ##
sMeasure = 'Qty';
nValueGet = CellGetN(cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;
CellPutN ( vOrderquantity + nValueGet , cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;

sMeasure = 'Sales Amount';
nValueGet = CellGetN(cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;
CellPutN ( nSalesAmt + nValueGet , cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;

sMeasure = 'Cost';
nValueGet = CellGetN(cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;
CellPutN ( nCost + nValueGet , cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;


sMeasure = 'Freight';
nValueGet = CellGetN(cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;
CellPutN ( nFreight + nValueGet , cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;

sMeasure = 'Discount Amount';
nValueGet = CellGetN(cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;
CellPutN ( vDiscountamount + nValueGet , cCubeName,cVersion,sYear,sMonth,cCurrency,sEmployeeID,vSalesterritoryregion,
  vResellername,vEnglishpromotionname,sProduct,sMeasure ) ;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion