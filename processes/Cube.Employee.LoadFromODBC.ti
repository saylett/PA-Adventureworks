#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

## This process loads base salaries to the Employee Cube ##

cCube = 'Employee';
cVersion = 'Actual';
cYear = '2012';

cCurrency = 'Local';

CubeClearData(cCube);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#sSalesTerritoryKey = NumberToString(vSalesTerritoryKey);
#sRegion = AttrS('Sales Territory To Region Lookup', sSalesTerritoryKey, 'Region');
sRegion = NumberToString(vSalesTerritoryKey);

#sEmployeeKey = NumberToString(vEmployeeKey);
sEmployeeKey = vEmployeeKey;

# Remove dot from end of product
sString = sEmployeeKey;
nLength = LONG(sString);
sLastCharacter = SUBST(sString, nLength, 1);
If(sLastCharacter @= '.');
  sString = SUBST(sString, 1, nLength - 1);
EndIf;
sEmployeeKey = sString;


# Convert hourly rate to an annual rate
nSalary = vBaseRate * 40 * 52;

#Employee Cube
#Version
#Year
#Period
#Currency
#Regio n
#Department
#Employee
#Employee Measure

# department is a random whole number between 2 and 7
sDepartment = Numbertostring(INT(RAND * 6) + 2);

nMonth = 1;
WHILE(nMonth <=12);
  sMonth = NumberToString(nMonth);
  CellPutN(1, cCube, cVersion, cYear, sMonth, cCurrency, sRegion, sDepartment, sEmployeeKey, 'FTE');
  CellPutN(nSalary, cCube, cVersion, cYear, sMonth, cCurrency, sRegion, sDepartment, sEmployeeKey, 'Base Salary');
  nMonth = nMonth +1;
END;



#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion