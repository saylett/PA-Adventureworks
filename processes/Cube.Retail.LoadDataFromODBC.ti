#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

sCube = 'Retail';

CubeClearData(sCube);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

#cDim = 'Sales Territory To Region Lookup';
#
#If(DIMIX(cDim, SalesTerritoryKey)> 0);
#  Else;
#  DimensionElementInsert(cDim, '', SalesTerritoryKey,'N');
#EndIF;
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#Version
#Year
#Period
#Currency
#Regio n
#Product
#Retail Measure


sVersion = 'Actual';
sYear = subst(OrderDateKey,1,4);
#sYear = subst(NumberToString(OrderDateKey),1,4);
#sYear = '2012'

# data source doesn't seem to have the month
# so randomly scatter data through the year 
# sPeriod = 'Dec';
# Period is a random whole number between 1 and 12
sPeriod = NumberToString(INT(RAND * 12) + 1);

sCurrency = 'Local';

sRegion = AttrS('Sales Territory To Region Lookup', SalesTerritoryKey, 'Region');

# Remove dot from end of Product
nProductLength = LONG(ProductKey);
sLastCharacter = SUBST(ProductKey, nProductLength, 1);
If(sLastCharacter @= '.');
  ProductKey = SUBST(ProductKey, 1, nProductLength - 1);
EndIf;

# Arbr
#IF(DIMIX('Product', ProductKey) = 0);
#  ProductKey = '483';
#ENDIF;

#CellPutS(SalesOrderNumber,      sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Sales Order');
CellPutN(OrderQuantity,          sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Order Quantity');
CellPutN(UnitPrice,              sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Unit Price');
#CellPutN(ExtendedAmount,        sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Extended Amount');
#CellPutN(UnitPriceDiscountPct,  sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Unit Price Discount Pct');
#CellPutN(DiscountAmount,        sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Discount Amount');
CellPutN(ProductStandardCost,    sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Product Standard Cost');
#CellPutN(TotalProductCost,       sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Total Product Cost');
CellPutN(SalesAmount,           sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Sales Amount');
CellPutN(TaxAmount,             sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Tax Amount');
CellPutN(Freight,                sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Freight');
#CellPutN(CarrierTrackingNumber, sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Carrier Tracking Number');
#CellPutN(CustomerPONumber,      sCube, sVersion, sYear, sPeriod, sCurrency, sRegion, ProductKey, 'Customer PONumber');
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion